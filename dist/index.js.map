{
  "version": 3,
  "sources": ["../src/index.ts"],
  "sourcesContent": ["let _debug = false;\nconst trace = (msg: Record<string, unknown> | string) => {\n  /* istanbul ignore next */\n  if (_debug) {\n    console.log(msg);\n  }\n};\n\nexport interface Imports {\n  fs: {\n    readTextFile: (fname: string) => Promise<string>;\n    writeTextFile: (fname: string, contents: string) => Promise<unknown>;\n  };\n  YAML: {\n    load: (str: string, opts?: unknown) => unknown;\n    dump: (obj: unknown, opts?: unknown) => string;\n  };\n  dotProp: {\n    get: <T>(\n      object:\n        | {\n          [key: string]: unknown;\n        }\n        | undefined,\n      path: string\n    ) => T | undefined;\n    set: <T extends { [key: string]: unknown }>(\n      object: T,\n      path: string,\n      value: unknown\n    ) => T;\n  };\n  exit: (code: number) => void;\n}\n\nenum FORMAT {\n  JSON,\n  YAML,\n}\n\nexport default async function ({\n  args,\n  imports,\n  debug,\n}: {\n  args: string[];\n  imports: Imports;\n  debug?: boolean;\n}): Promise<unknown> {\n  _debug = !!debug;\n  const { fs, YAML, dotProp, exit } = imports;\n  const { filepath, key, val: val_, type } = parseArgs(args, exit);\n  const { format, contents, input } = await parse(filepath);\n  trace({ filepath, key, type, val: val_, format });\n  if (val_) {\n    // set\n    let val;\n    if (type) {\n      if (type === 'number') {\n        val = Number(val_);\n      } else if (type === 'boolean') {\n        val = val_.trim().toLowerCase().match(/false|0|null/)\n          ? false\n          : true\n      } else {\n        // string\n        val = val_\n      }\n    } else {\n      val = val_;\n    }\n    let modified;\n    if (key.match(/\\.\\[\\]$/)) {\n      // user is requesting the value be appended to array\n      const _key = key.replace(/\\.\\[\\]$/, ``);\n      const prev = (dotProp.get(contents, _key) as Array<unknown>) || [];\n      prev.push(val)\n      modified = dotProp.set(contents, _key, prev);\n    } else if (key.match(/\\.\\[0\\]$/)) {\n      // user is requesting the value be appended to array\n      const _key = key.replace(/\\.\\[0\\]$/, ``);\n      const prev = (dotProp.get(contents, _key) as Array<unknown>) || [];\n      prev.unshift(val)\n      modified = dotProp.set(contents, _key, prev);\n    } else {\n      modified = dotProp.set(contents, key, val);\n    }\n    const output =\n      format === FORMAT.JSON\n        ? JSON.stringify(modified, null, 2)\n        : YAML.dump(modified);\n    await fs.writeTextFile(filepath, output);\n    trace(`updated \"${key}: ${val}\"`);\n    return modified;\n  } else if (key) {\n    // get\n    const val = dotProp.get(contents, key);\n    return val;\n  } else {\n    // full file\n    return input;\n  }\n\n  async function parse(filepath: string) {\n    let input: string;\n    let contents: Record<string, unknown>;\n    try {\n      input = await fs.readTextFile(filepath);\n    } catch (err) {\n      // failed to open file.\n      if (filepath.match(/\\.json$/)) {\n        return { input: `{}`, contents: {}, format: FORMAT.JSON }\n      } else if (filepath.match(/\\.(yaml|yml)/)) {\n        return { input: ``, contents: {}, format: FORMAT.YAML }\n      }\n      throw err;\n    }\n    try {\n      contents = JSON.parse(input);\n      return { input, contents, format: FORMAT.JSON };\n    } catch {\n      contents = YAML.load(input) as Record<string, unknown>;\n      return { input, contents, format: FORMAT.YAML };\n    }\n  }\n}\n\nfunction parseArgs(args: string[], exit: (n: number) => void) {\n  const [filepath, key, val, type] = args;\n  /* istanbul ignore next */\n  if (!filepath || filepath === '-h' || filepath === '--help') {\n    console.log(\n      [\n        `No-fuss CLI to get/set json/yaml properties in file`,\n        ``,\n        ` Usage: jyt <filepath> [dotPath] [val] [type]`,\n        ``,\n        `    filepath : must be valid json/yaml files (expects objects)`,\n        `    dotPath  : a dotted key path 'a.b.c'. When absent, prints the whole file`,\n        `    val      : if specified, sets the value, else prints value to stdout`,\n        `    type     : type of 'val' (defaults to string)`,\n        ``,\n        ` Examples:`,\n        `    # get a value`,\n        `    jyt some/file.json  a.b.c`,\n        ``,\n        `    # set a value`,\n        `    jyt some/file.json  a.b.c 42`,\n        ``,\n        `    # push to (end of) array`,\n        `    jyt some/file.json  a.b.arr.[] 42 number`,\n        ``,\n        `    # push to (head of) array`,\n        `    jyt some/file.json  a.b.arr.[0] false boolean`,\n        ``,\n        `    # add a new field (defaults to string)`,\n        `    jyt some/file.yaml  a.b.d hello`,\n        ``,\n        `    # add a new field (defaults to string)`,\n        `    jyt some/file.yaml  a.b.e world string`,\n        ``,\n      ].join('\\n')\n    );\n    exit(filepath ? 0 : 1);\n  }\n  return { filepath, key, val, type };\n}\n"],
  "mappings": "kVAAA,8BAAI,GAAS,GACP,EAAQ,AAAC,GAA0C,CAEvD,AAAI,GACF,QAAQ,IAAI,IA+BX,EAAL,UAAK,EAAL,CACE,mBACA,qBAFG,WAKL,WAA+B,EAQV,mCARU,CAC7B,OACA,UACA,SAKmB,CACnB,EAAS,CAAC,CAAC,EACX,GAAM,CAAE,KAAI,OAAM,UAAS,QAAS,EAC9B,CAAE,WAAU,MAAK,IAAK,EAAM,QAAS,EAAU,EAAM,GACrD,CAAE,SAAQ,WAAU,SAAU,KAAM,GAAM,GAEhD,GADA,EAAM,CAAE,WAAU,MAAK,OAAM,IAAK,EAAM,WACpC,EAAM,CAER,GAAI,GACJ,AAAI,EACF,AAAI,IAAS,SACX,EAAM,OAAO,GACR,AAAI,IAAS,UAClB,EAAM,GAAK,OAAO,cAAc,MAAM,gBAKtC,EAAM,EAGR,EAAM,EAER,GAAI,GACJ,GAAI,EAAI,MAAM,WAAY,CAExB,GAAM,GAAO,EAAI,QAAQ,UAAW,IAC9B,EAAQ,EAAQ,IAAI,EAAU,IAA4B,GAChE,EAAK,KAAK,GACV,EAAW,EAAQ,IAAI,EAAU,EAAM,WAC9B,EAAI,MAAM,YAAa,CAEhC,GAAM,GAAO,EAAI,QAAQ,WAAY,IAC/B,EAAQ,EAAQ,IAAI,EAAU,IAA4B,GAChE,EAAK,QAAQ,GACb,EAAW,EAAQ,IAAI,EAAU,EAAM,OAEvC,GAAW,EAAQ,IAAI,EAAU,EAAK,GAExC,GAAM,GACJ,IAAW,EACP,KAAK,UAAU,EAAU,KAAM,GAC/B,EAAK,KAAK,GAChB,YAAM,GAAG,cAAc,EAAU,GACjC,EAAM,YAAY,MAAQ,MACnB,MACF,OAAI,GAEG,EAAQ,IAAI,EAAU,GAI3B,EAGT,WAAqB,EAAkB,gCACrC,GAAI,GACA,EACJ,GAAI,CACF,EAAQ,KAAM,GAAG,aAAa,SACvB,EAAP,CAEA,GAAI,EAAS,MAAM,WACjB,MAAO,CAAE,MAAO,KAAM,SAAU,GAAI,OAAQ,GACvC,GAAI,EAAS,MAAM,gBACxB,MAAO,CAAE,MAAO,GAAI,SAAU,GAAI,OAAQ,GAE5C,KAAM,GAER,GAAI,CACF,SAAW,KAAK,MAAM,GACf,CAAE,QAAO,WAAU,OAAQ,SAC5B,EAAN,CACA,SAAW,EAAK,KAAK,GACd,CAAE,QAAO,WAAU,OAAQ,SAKxC,WAAmB,EAAgB,EAA2B,CAC5D,GAAM,CAAC,EAAU,EAAK,EAAK,GAAQ,EAEnC,MAAI,EAAC,GAAY,IAAa,MAAQ,IAAa,WACjD,SAAQ,IACN,CACE,sDACA,GACA,gDACA,GACA,iEACA,+EACA,2EACA,oDACA,GACA,aACA,oBACA,gCACA,GACA,oBACA,mCACA,GACA,+BACA,+CACA,GACA,gCACA,oDACA,GACA,6CACA,sCACA,GACA,6CACA,6CACA,IACA,KAAK;AAAA,IAET,EAAK,EAAW,EAAI,IAEf,CAAE,WAAU,MAAK,MAAK",
  "names": []
}
